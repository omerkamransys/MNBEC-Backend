
IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES  WHERE TABLE_NAME = 'applicationclaimgroup')) 
 BEGIN
CREATE TABLE applicationclaimgroup (
  [ClaimGroupId] int check ([ClaimGroupId] > 0) NOT NULL,
  [ClaimGroupLabel] varchar(100) DEFAULT NULL,
  [ClaimGroupLabelTranslation] varchar(100) DEFAULT NULL,
  [ClaimGroupCode] varchar(10) DEFAULT NULL,

  [CreatedById] int check ([CreatedById] > 0) DEFAULT NULL,
  [CreatedDate] datetime2(0) DEFAULT NULL,
  [ModifiedById] int check ([ModifiedById] > 0) DEFAULT NULL,
  [ModifiedDate] datetime2(0) DEFAULT NULL,
  [Active] bit NOT NULL DEFAULT 1,
  PRIMARY KEY ([ClaimGroupId]),
  CONSTRAINT [ClaimGroupCode_UNIQUE] UNIQUE  ([ClaimGroupCode])
)
END;



IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES  WHERE TABLE_NAME = 'applicationclaim')) 
 BEGIN
CREATE TABLE applicationclaim (
  [ClaimId] int check ([ClaimId] > 0) NOT NULL IDENTITY,
  [ClaimGroupId] int check ([ClaimGroupId] > 0) DEFAULT NULL,
  [ClaimType] varchar(256) DEFAULT NULL,
  [ClaimLabel] varchar(100) DEFAULT NULL,
  [ClaimLabelTranslation] varchar(100) DEFAULT NULL,
  [ClaimCode] varchar(10) DEFAULT NULL,

  [CreatedById] int check ([CreatedById] > 0) DEFAULT NULL,
  [CreatedDate] datetime2(0) DEFAULT NULL,
  [ModifiedById] int check ([ModifiedById] > 0) DEFAULT NULL,
  [ModifiedDate] datetime2(0) DEFAULT NULL,
  [Active] bit NOT NULL DEFAULT 1,
  PRIMARY KEY ([ClaimId]),
  CONSTRAINT [ClaimCode_UNIQUE] UNIQUE  ([ClaimCode])
 ,
  CONSTRAINT [FK_applicationclaim_applicationclaimgroup_ClaimGroupId] FOREIGN KEY ([ClaimGroupId]) REFERENCES applicationclaimgroup ([ClaimGroupId]) ON DELETE NO ACTION ON UPDATE NO ACTION
)

CREATE INDEX [_idx] ON applicationclaim ([ClaimGroupId])
END;



IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES  WHERE TABLE_NAME = 'applicationrole')) 
 BEGIN
CREATE TABLE applicationrole (
  [RoleId] int check ([RoleId] > 0) NOT NULL IDENTITY,
  [RoleName] varchar(60) NOT NULL,
  [RoleNameTranslation] varchar(60) DEFAULT NULL,
  [RoleNameCode] varchar(10) DEFAULT NULL,
  [NormalizedNameRoleName] varchar(60) DEFAULT NULL,
  [RoleDescription] varchar(256) DEFAULT NULL,

  [CreatedById] int check ([CreatedById] > 0) DEFAULT NULL,
  [CreatedDate] datetime2(0) DEFAULT NULL,
  [ModifiedById] int check ([ModifiedById] > 0) DEFAULT NULL,
  [ModifiedDate] datetime2(0) DEFAULT NULL,
  [Active] bit NOT NULL DEFAULT 1,
  PRIMARY KEY ([RoleId])
);

CREATE INDEX [RoleNameIndex] ON applicationrole ([RoleName]);
END;



IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES  WHERE TABLE_NAME = 'ApplicationUser')) 
 BEGIN
CREATE TABLE ApplicationUser (
  [UserId] int check ([UserId] > 0) NOT NULL IDENTITY,
  [UserName] varchar(256) NOT NULL,
  [NormalizedUserName] varchar(256) DEFAULT NULL,
  [FirstName] varchar(60) DEFAULT NULL,
  [LastName] varchar(60) DEFAULT NULL,

  [IdentificationNumber] varchar(20) NOT NULL,  
  [Address1] varchar(100) DEFAULT NULL,
  [Address2] varchar(100) DEFAULT NULL,
  [CityId] int check ([CityId] > 0) DEFAULT  NULL,
  [StateId] int check ([StateId] > 0) DEFAULT  NULL,
  [PostalCode] varchar(20) DEFAULT NULL,

  [Email] varchar(256) DEFAULT NULL,
  [NormalizedEmail] varchar(256) DEFAULT NULL,
  [EmailConfirmed] bit NOT NULL,
  [PasswordHash] varchar(256) DEFAULT NULL ,
  [SecurityStamp] varchar(256) DEFAULT NULL ,
  [ConcurrencyStamp] varchar(256) DEFAULT NULL ,
  [PhoneNumber] varchar(20) DEFAULT NULL,
  [PhoneNumberConfirmed] bit NOT NULL,
  [TwoFactorEnabled] bit NOT NULL,
  [LockoutEnd] datetime2(0) DEFAULT NULL,
  [LockoutEnabled] bit NOT NULL,
  [AccessFailedCount] int NOT NULL,
  
  [LoginDate] datetime2(0) DEFAULT NULL,
  
  [CreatedById] int check ([CreatedById] > 0) DEFAULT NULL,
  [CreatedDate] datetime2(0) DEFAULT NULL,
  [ModifiedById] int check ([ModifiedById] > 0) DEFAULT NULL,
  [ModifiedDate] datetime2(0) DEFAULT NULL,
  [Active] bit NOT NULL DEFAULT 1,
  PRIMARY KEY ([UserId]),
  CONSTRAINT [UserNameIndex] UNIQUE ([UserName])

);

CREATE INDEX [EmailIndex] ON ApplicationUser ([Email]);
CREATE INDEX [IX_User_StateId] ON ApplicationUser ([StateId]);
END;



IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES  WHERE TABLE_NAME = 'applicationuserrole')) 
 BEGIN

 CREATE TABLE applicationuserrole (
  [UserRoleId] int check ([UserRoleId] > 0) NOT NULL IDENTITY,
  [UserId] int check ([UserId] > 0) NOT NULL,
  [RoleId] int check ([RoleId] > 0) NOT NULL,
  
  [CreatedById] int check ([CreatedById] > 0) DEFAULT NULL,
  [CreatedDate] datetime2(0) DEFAULT NULL,
  [ModifiedById] int check ([ModifiedById] > 0) DEFAULT NULL,
  [ModifiedDate] datetime2(0) DEFAULT NULL,
  [Active] bit NOT NULL DEFAULT 1,
  PRIMARY KEY ([UserRoleId])
 ,
  CONSTRAINT [FK_ApplicationUserRole_ApplicationRole_RoleId] FOREIGN KEY ([RoleId]) REFERENCES applicationrole ([RoleId]),
  CONSTRAINT [FK_ApplicationUserRole_ApplicationUser_UserId] FOREIGN KEY ([UserId]) REFERENCES applicationuser ([UserId])
);

CREATE INDEX [IX_ApplicationUserRole_RoleId] ON applicationuserrole ([RoleId]);
CREATE INDEX [FK_ApplicationUserRole_ApplicationUser_UserId] ON applicationuserrole ([UserId]);
END;



IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES  WHERE TABLE_NAME = 'applicationroleclaim')) 
 BEGIN

 CREATE TABLE applicationroleclaim (
  [RoleClaimId] int check ([RoleClaimId] > 0) NOT NULL IDENTITY,
  [RoleId] int check ([RoleId] > 0) NOT NULL,
  [ClaimType] varchar(256) DEFAULT NULL,
  [ClaimValue] varchar(max) ,
  [ClaimId] int check ([ClaimId] > 0) DEFAULT NULL,
  [CreatedById] int check ([CreatedById] > 0) DEFAULT NULL,
  [CreatedDate] datetime2(0) DEFAULT NULL,
  [ModifiedById] int check ([ModifiedById] > 0) DEFAULT NULL,
  [ModifiedDate] datetime2(0) DEFAULT NULL,
  [Active] bit NOT NULL DEFAULT 1,
  PRIMARY KEY ([RoleClaimId])
 ,
  CONSTRAINT [FK_ApplicationRoleClaim_AppicationClaim_ClaimId] FOREIGN KEY ([ClaimId]) REFERENCES applicationclaim ([ClaimId]) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT [FK_ApplicationRoleClaim_AppicationRole_RoleId] FOREIGN KEY ([RoleId]) REFERENCES applicationrole ([RoleId])
);

CREATE INDEX [IX_ApplicationRoleClaim_RoleId] ON applicationroleclaim ([RoleId]);
CREATE INDEX [FK_ApplicationRoleClaim_AppicationClaim_ClaimId_idx] ON applicationroleclaim ([ClaimId]);
END;



IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES  WHERE TABLE_NAME = 'applicationuserclaim')) 
 BEGIN

 
 CREATE TABLE applicationuserclaim (
  [UserClaimId] int check ([UserClaimId] > 0) NOT NULL IDENTITY,
  [UserId] int check ([UserId] > 0) NOT NULL,
  [ClaimType] varchar(256) DEFAULT NULL,
  [ClaimValue] varchar(max) ,
  [CreatedById] int check ([CreatedById] > 0) DEFAULT NULL,
  [CreatedDate] datetime2(0) DEFAULT NULL,
  [ModifiedById] int check ([ModifiedById] > 0) DEFAULT NULL,
  [ModifiedDate] datetime2(0) DEFAULT NULL,
  [Active] bit NOT NULL DEFAULT 1,
  PRIMARY KEY ([UserClaimId])
 ,
  CONSTRAINT [FK_ApplicationUserClaim_ApplicationUser_UserId] FOREIGN KEY ([UserId]) REFERENCES applicationuser ([UserId])
);

CREATE INDEX [IX_ApplicationUserClaim_UserId] ON applicationuserclaim ([UserId]);

END;


IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES  WHERE TABLE_NAME = 'usertype')) 
 BEGIN

 CREATE TABLE usertype (
  [UserTypeId] int check ([UserTypeId] > 0) NOT NULL IDENTITY,
  [UserTypeCode] varchar(10) DEFAULT NULL,
  [UserTypeName] varchar(60) DEFAULT NULL,
  [UserTypeNameTranslation] varchar(60) DEFAULT NULL,
  [CreatedById] int check ([CreatedById] > 0) DEFAULT NULL,
  [CreatedDate] datetime2(0) DEFAULT NULL,
  [ModifiedById] int check ([ModifiedById] > 0) DEFAULT NULL,
  [ModifiedDate] datetime2(0) DEFAULT NULL,
  [Active] bit NOT NULL DEFAULT 1,
  PRIMARY KEY ([UserTypeId])
);


END;



IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES  WHERE TABLE_NAME = 'Employee')) 
 BEGIN

 CREATE TABLE Employee (
  [EmployeeId] int check ([EmployeeId] > 0) NOT NULL,
  [UserTypeId] int check ([UserTypeId] > 0) NOT NULL,
  [CreatedById] int check ([CreatedById] > 0) DEFAULT NULL,
  [CreatedDate] datetime2(0) DEFAULT NULL,
  [ModifiedById] int check ([ModifiedById] > 0) DEFAULT NULL,
  [ModifiedDate] datetime2(0) DEFAULT NULL,
  [Active] bit NOT NULL DEFAULT 1,
  PRIMARY KEY ([EmployeeId])
 ,
  CONSTRAINT [FK_Employee_UserType_UserId] FOREIGN KEY ([UserTypeId]) REFERENCES usertype ([UserTypeId]),
  CONSTRAINT [FK_Employee_User_UserId] FOREIGN KEY ([EmployeeId]) REFERENCES applicationuser ([UserId])
);

CREATE INDEX [IX_employee_EmployeeId] ON Employee ([EmployeeId]);
CREATE INDEX [FK_Employee_UserType_UserId] ON Employee ([UserTypeId]);


END;



IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES  WHERE TABLE_NAME = 'applicationroleclaimlog')) 
 BEGIN

 CREATE TABLE applicationroleclaimlog (
 
  [RoleClaimId] int check ([RoleClaimId] > 0) NOT NULL ,
  [RoleId] int check ([RoleId] > 0) NOT NULL,
  [ClaimType] varchar(256) DEFAULT NULL,
  [ClaimValue] varchar(max) ,
  [ClaimId] int check ([ClaimId] > 0) DEFAULT NULL,
  [CreatedById] int check ([CreatedById] > 0) DEFAULT NULL,
  [CreatedDate] datetime2(0) DEFAULT NULL,
  [ModifiedById] int check ([ModifiedById] > 0) DEFAULT NULL,
  [ModifiedDate] datetime2(0) DEFAULT NULL,
  [Active] bit NOT NULL DEFAULT 1,
  [AuditLogId] bigint check ([AuditLogId] > 0) NOT NULL IDENTITY,
  [AuditDate] datetime2(0) DEFAULT NULL,
  [AuditCreatedById] int check ([AuditCreatedById] > 0) DEFAULT NULL,
  PRIMARY KEY ([AuditLogId])
);


END;



IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES  WHERE TABLE_NAME = 'applicationrolelog')) 
 BEGIN

CREATE TABLE applicationrolelog (
 
  [RoleId] int check ([RoleId] > 0) NOT NULL ,
  [RoleName] varchar(60) NOT NULL,
  [RoleNameTranslation] varchar(60) DEFAULT NULL,
  [RoleNameCode] varchar(60) DEFAULT NULL,
  [NormalizedNameRoleName] varchar(60) DEFAULT NULL,
  [RoleDescription] varchar(256) DEFAULT NULL,
  [CreatedById] int check ([CreatedById] > 0) DEFAULT NULL,
  [CreatedDate] datetime2(0) DEFAULT NULL,
  [ModifiedById] int check ([ModifiedById] > 0) DEFAULT NULL,
  [ModifiedDate] datetime2(0) DEFAULT NULL,
  [Active] bit NOT NULL DEFAULT 1,
  [AuditLogId] bigint check ([AuditLogId] > 0) NOT NULL IDENTITY,
  [AuditDate] datetime2(0) DEFAULT NULL,
  [AuditCreatedById] int check ([AuditCreatedById] > 0) DEFAULT NULL,
  PRIMARY KEY ([AuditLogId])
);


END;


IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES  WHERE TABLE_NAME = 'ApplicationUserlog')) 
 BEGIN


CREATE TABLE ApplicationUserlog (
 
  [UserId] int check ([UserId] > 0) NOT NULL ,
  [UserName] varchar(256) NOT NULL,
  [NormalizedUserName] varchar(256) DEFAULT NULL,
  [FirstName] varchar(60) DEFAULT NULL,
  [LastName] varchar(60) DEFAULT NULL,

  [IdentificationNumber] varchar(20) NOT NULL,  
  [Address1] varchar(100) DEFAULT NULL,
  [Address2] varchar(100) DEFAULT NULL,
  [CityId] int check ([CityId] > 0) DEFAULT  NULL,
  [StateId] int check ([StateId] > 0) DEFAULT  NULL,
  [PostalCode] varchar(20) DEFAULT NULL,

  [Email] varchar(256) DEFAULT NULL,
  [NormalizedEmail] varchar(256) DEFAULT NULL,
  [EmailConfirmed] bit NOT NULL,
  [PasswordHash] varchar(256) DEFAULT NULL ,
  [SecurityStamp] varchar(256) DEFAULT NULL ,
  [ConcurrencyStamp] varchar(256) DEFAULT NULL ,
  [PhoneNumber] varchar(20) DEFAULT NULL,
  [PhoneNumberConfirmed] bit NOT NULL,
  [TwoFactorEnabled] bit NOT NULL,
  [LockoutEnd] datetime2(0) DEFAULT NULL,
  [LockoutEnabled] bit NOT NULL,
  [AccessFailedCount] int NOT NULL,
  
  [LoginDate] datetime2(0) DEFAULT NULL,
  
  [CreatedById] int check ([CreatedById] > 0) DEFAULT NULL,
  [CreatedDate] datetime2(0) DEFAULT NULL,
  [ModifiedById] int check ([ModifiedById] > 0) DEFAULT NULL,
  [ModifiedDate] datetime2(0) DEFAULT NULL,
  [Active] bit NOT NULL DEFAULT 1,
   [AuditLogId] bigint check ([AuditLogId] > 0) NOT NULL IDENTITY,
  [AuditDate] datetime2(0) DEFAULT NULL,
  [AuditCreatedById] int check ([AuditCreatedById] > 0) DEFAULT NULL,
  PRIMARY KEY ([AuditLogId])
);


END;




IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES  WHERE TABLE_NAME = 'applicationuserrolelog')) 
 BEGIN


CREATE TABLE applicationuserrolelog (
 
  [UserRoleId] int check ([UserRoleId] > 0) NOT NULL,
  [UserId] int check ([UserId] > 0) NOT NULL,
  [RoleId] int check ([RoleId] > 0) NOT NULL,
  
  [CreatedById] int check ([CreatedById] > 0) DEFAULT NULL,
  [CreatedDate] datetime2(0) DEFAULT NULL,
  [ModifiedById] int check ([ModifiedById] > 0) DEFAULT NULL,
  [ModifiedDate] datetime2(0) DEFAULT NULL,
  [Active] bit NOT NULL DEFAULT 1,
  [AuditLogId] bigint check ([AuditLogId] > 0) NOT NULL IDENTITY,
  [AuditDate] datetime2(0) DEFAULT NULL,
  [AuditCreatedById] int check ([AuditCreatedById] > 0) DEFAULT NULL,
  PRIMARY KEY ([AuditLogId])
);


END;


IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES  WHERE TABLE_NAME = 'Employeelog')) 
 BEGIN

CREATE TABLE Employeelog (
 
  [EmployeeId] int check ([EmployeeId] > 0) NOT NULL,
  [UserTypeId] int check ([UserTypeId] > 0) NOT NULL,
  [CreatedById] int check ([CreatedById] > 0) DEFAULT NULL,
  [CreatedDate] datetime2(0) DEFAULT NULL,
  [ModifiedById] int check ([ModifiedById] > 0) DEFAULT NULL,
  [ModifiedDate] datetime2(0) DEFAULT NULL,
  [Active] bit NOT NULL DEFAULT 1,
  [AuditLogId] bigint check ([AuditLogId] > 0) NOT NULL IDENTITY,
  [AuditDate] datetime2(0) DEFAULT NULL,
  [AuditCreatedById] int check ([AuditCreatedById] > 0) DEFAULT NULL,
  PRIMARY KEY ([AuditLogId])
);
END;



-- =============================================
-- Author:		
-- Create date:	
-- Description:	NotificationActionType table holds list of Notification Types.
-- =============================================
CREATE TABLE NotificationActionType (
  [NotificationActionTypeId] int check ([NotificationActionTypeId] > 0) NOT NULL IDENTITY,
  [NotificationActionTypeName] varchar(60) NOT NULL,
  [NotificationActionTypeNameTranslation] varchar(60) DEFAULT NULL,
  [NotificationActionTypeCode] varchar(10) DEFAULT NULL,

  [CreatedById] int check ([CreatedById] > 0) DEFAULT NULL,
  [CreatedDate] datetime2(0) DEFAULT NULL,
  [ModifiedById] int check ([ModifiedById] > 0) DEFAULT NULL,
  [ModifiedDate] datetime2(0) DEFAULT NULL,
  [Active] bit NOT NULL DEFAULT 1,
  PRIMARY KEY ([NotificationActionTypeId])
);



-- =============================================
-- Author:		
-- Create date:	
-- Description:	Notification holds Notification data.
-- =============================================
CREATE TABLE Notification (
  [NotificationId] int check ([NotificationId] > 0) NOT NULL IDENTITY,
  [NotificationActionTypeId] INT CHECK ([NotificationActionTypeId] > 0) NULL,  
  [NotificationName] varchar(500) NOT NULL,
  [NotificationNameTranslation] varchar(500) DEFAULT NULL,
  
  [CreatedById] int check ([CreatedById] > 0) DEFAULT NULL,
  [CreatedDate] datetime2(0) DEFAULT NULL,
  [ModifiedById] int check ([ModifiedById] > 0) DEFAULT NULL,
  [ModifiedDate] datetime2(0) DEFAULT NULL,
  [NotificationCode] VARCHAR(20)  DEFAULT NULL Unique,
  [Active] bit NOT NULL DEFAULT 1,
  PRIMARY KEY ([NotificationId])

 ,
  CONSTRAINT [FK_Notification_NotificationActionType_Id] FOREIGN KEY ([NotificationActionTypeId]) REFERENCES NotificationActionType ([NotificationActionTypeId])
);

CREATE INDEX [IX_Notification_NotificationActionTypeId] ON Notification ([NotificationActionTypeId]);





-- =============================================
-- Author:		
-- Create date:	
-- Description:	ApplicationUserNotification holds Notification DATA for ApplicationUser.
-- =============================================
CREATE TABLE ApplicationUserNotification (
  [ApplicationUserNotificationId] int check ([ApplicationUserNotificationId] > 0) NOT NULL IDENTITY,
  [UserId] int check ([UserId] > 0) NOT NULL,  
  [NotificationId] int check ([NotificationId] > 0) NOT NULL,  
  [ItemId] int check ([ItemId] > 0) NULL,

  [NotificationMessage] varchar(256) NOT NULL,
  [NotificationMessageTranslation] varchar(256) DEFAULT NULL,
  
  [Sent] bit NOT NULL DEFAULT 0,
  [Viewed] bit NOT NULL DEFAULT 0,  
  
  [CreatedById] int check ([CreatedById] > 0) DEFAULT NULL,
  [CreatedDate] datetime2(0) DEFAULT NULL,
  [ModifiedById] int check ([ModifiedById] > 0) DEFAULT NULL,
  [ModifiedDate] datetime2(0) DEFAULT NULL,
  [Active] bit NOT NULL DEFAULT 0,

  PRIMARY KEY ([ApplicationUserNotificationId]),

  CONSTRAINT [FK_ApplicationUserNotification_Notification_NotificationId] FOREIGN KEY ([NotificationId]) REFERENCES Notification ([NotificationId]),
  CONSTRAINT [FK_ApplicationUserNotification_User_UserId] FOREIGN KEY ([UserId]) REFERENCES ApplicationUser ([UserId])
);



-- Diagnostic module


IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES  WHERE TABLE_NAME = 'QuestionnaireTemplate')) 
 BEGIN

 CREATE TABLE QuestionnaireTemplate (
  [Id] int check ([Id] > 0) IDENTITY(1,1) NOT NULL,
  [Title] nvarchar(256) NOT NULL,
  [CreatedById] int check ([CreatedById] > 0) DEFAULT NULL,
  [CreatedDate] datetime2(0) DEFAULT NULL,
  [ModifiedById] int check ([ModifiedById] > 0) DEFAULT NULL,
  [ModifiedDate] datetime2(0) DEFAULT NULL,
  [Active] bit NOT NULL DEFAULT 1,
  PRIMARY KEY ([Id])
 );

END;



IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES  WHERE TABLE_NAME = 'AreaLookUp')) 
 BEGIN

 CREATE TABLE AreaLookUp (
  [Id] int check ([Id] > 0) IDENTITY(1,1) NOT NULL,
  [Title] nvarchar(512) NOT NULL,
  [OrderNumber] int check ([OrderNumber] > 0) DEFAULT NULL,
  [CreatedById] int check ([CreatedById] > 0) DEFAULT NULL,
  [CreatedDate] datetime2(0) DEFAULT NULL,
  [ModifiedById] int check ([ModifiedById] > 0) DEFAULT NULL,
  [ModifiedDate] datetime2(0) DEFAULT NULL,
  [Active] bit NOT NULL DEFAULT 1,
  PRIMARY KEY ([Id])
 );

END;



IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES  WHERE TABLE_NAME = 'FourPLookUp')) 
 BEGIN

 CREATE TABLE FourPLookUp (
  [Id] int check ([Id] > 0) IDENTITY(1,1) NOT NULL,
  [Title] nvarchar(512) NOT NULL,
  [OrderNumber] int check ([OrderNumber] > 0) DEFAULT NULL,
  [CreatedById] int check ([CreatedById] > 0) DEFAULT NULL,
  [CreatedDate] datetime2(0) DEFAULT NULL,
  [ModifiedById] int check ([ModifiedById] > 0) DEFAULT NULL,
  [ModifiedDate] datetime2(0) DEFAULT NULL,
  [Active] bit NOT NULL DEFAULT 1,
  PRIMARY KEY ([Id])
 );

END;



IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES  WHERE TABLE_NAME = 'ResponsibleLookUp')) 
 BEGIN

 CREATE TABLE ResponsibleLookUp (
  [Id] int check ([Id] > 0) IDENTITY(1,1) NOT NULL,
  [Title] nvarchar(512) NOT NULL,
  [OrderNumber] int check ([OrderNumber] > 0) DEFAULT NULL,
  [CreatedById] int check ([CreatedById] > 0) DEFAULT NULL,
  [CreatedDate] datetime2(0) DEFAULT NULL,
  [ModifiedById] int check ([ModifiedById] > 0) DEFAULT NULL,
  [ModifiedDate] datetime2(0) DEFAULT NULL,
  [Active] bit NOT NULL DEFAULT 1,
  PRIMARY KEY ([Id])
 );

END;






IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES  WHERE TABLE_NAME = 'LevelLookUp')) 
 BEGIN

 CREATE TABLE LevelLookUp (
  [Id] int check ([Id] > 0) IDENTITY(1,1) NOT NULL,
  [Title] nvarchar(512) NOT NULL,
  [OrderNumber] int check ([OrderNumber] > 0) DEFAULT NULL,
  [CreatedById] int check ([CreatedById] > 0) DEFAULT NULL,
  [CreatedDate] datetime2(0) DEFAULT NULL,
  [ModifiedById] int check ([ModifiedById] > 0) DEFAULT NULL,
  [ModifiedDate] datetime2(0) DEFAULT NULL,
  [Active] bit NOT NULL DEFAULT 1,
  PRIMARY KEY ([Id])
 );

END;


IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES  WHERE TABLE_NAME = 'LevelTypeLookUp')) 
 BEGIN

 CREATE TABLE LevelTypeLookUp (
  [Id] int check ([Id] > 0) IDENTITY(1,1) NOT NULL,
  [Code] nvarchar(100) NOT NULL,
  [Title] nvarchar(512) NOT NULL,
  [OrderNumber] int check ([OrderNumber] > 0) DEFAULT NULL,
  [CreatedById] int check ([CreatedById] > 0) DEFAULT NULL,
  [CreatedDate] datetime2(0) DEFAULT NULL,
  [ModifiedById] int check ([ModifiedById] > 0) DEFAULT NULL,
  [ModifiedDate] datetime2(0) DEFAULT NULL,
  [Active] bit NOT NULL DEFAULT 1,
  [score] [int] NULL,
  PRIMARY KEY ([Id])
 );

END;


IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES  WHERE TABLE_NAME = 'Question')) 
 BEGIN

 CREATE TABLE Question (
  [Id] int check ([Id] > 0) IDENTITY(1,1) NOT NULL,
  [QuestionaireTemplateId] int check ([QuestionaireTemplateId] > 0) NOT NULL,
  [Area] int check ([Area] > 0) DEFAULT NULL,
  [FourP] int check ([FourP] > 0) DEFAULT NULL,
  [Responsible] int check ([Responsible] > 0) DEFAULT NULL,
  [Level] int check ([Level] > 0) DEFAULT NULL,
  [OrderNumber] int check ([OrderNumber] > 0) DEFAULT NULL,
  [Level0] nvarchar(max) NOT NULL,
  [Level1] nvarchar(max) NOT NULL,
  [Level2] nvarchar(max) NOT NULL,
  [Level3] nvarchar(max) NOT NULL,
  [Level4] nvarchar(max) NOT NULL,
  [Element] nvarchar(max) NOT NULL,
  [DesiredLevel] int check ([DesiredLevel] > 0) DEFAULT NULL,
  [CreatedById] int check ([CreatedById] > 0) DEFAULT NULL,
  [CreatedDate] datetime2(0) DEFAULT NULL,
  [ModifiedById] int check ([ModifiedById] > 0) DEFAULT NULL,
  [ModifiedDate] datetime2(0) DEFAULT NULL,
  [Active] bit NOT NULL DEFAULT 1,
  PRIMARY KEY ([Id]),
  CONSTRAINT [FK_Question_QuestionaireTemplate_QuestionaireTemplateId] FOREIGN KEY ([QuestionaireTemplateId]) REFERENCES QuestionnaireTemplate ([Id]),
  CONSTRAINT [FK_Question_AreaLookUp_Area] FOREIGN KEY ([Area]) REFERENCES AreaLookUp ([Id]),
  CONSTRAINT [FK_Question_FourPLookUp_FourP] FOREIGN KEY ([FourP]) REFERENCES FourPLookUp ([Id]),
  CONSTRAINT [FK_Question_Applicationrole_Responsible] FOREIGN KEY ([Responsible]) REFERENCES  [Applicationrole] ([RoleId]),
  CONSTRAINT [FK_Question_LevelLookUp_Level] FOREIGN KEY ([Level]) REFERENCES LevelLookUp ([Id]),
  CONSTRAINT [FK_Question_LevelTypeLookUp_DesiredLevel]  FOREIGN KEY([DesiredLevel]) REFERENCES LevelTypeLookUp ([Id])
 );

END;





IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES  WHERE TABLE_NAME = 'Level')) 
 BEGIN

 CREATE TABLE Level (
  [LevelId] int check ([LevelId] > 0) IDENTITY(1,1) NOT NULL,
  [LevelName] varchar(256) DEFAULT NULL,
  [ParentId] int check ([ParentId] > 0) DEFAULT NULL,
  [QuestionaireTemplateId] int check ([QuestionaireTemplateId] > 0) DEFAULT NULL,
  [DeadlineDate] datetime2(0) DEFAULT NULL,
  [RenewalDate] datetime2(0) DEFAULT NULL,
  [WF] decimal(18,4) DEFAULT NULL,
  [CreatedById] int check ([CreatedById] > 0) DEFAULT NULL,
  [CreatedDate] datetime2(0) DEFAULT NULL,
  [ModifiedById] int check ([ModifiedById] > 0) DEFAULT NULL,
  [ModifiedDate] datetime2(0) DEFAULT NULL,
  [Active] bit NOT NULL DEFAULT 1,
  PRIMARY KEY ([LevelId]),
  CONSTRAINT [FK_level_level_ParentId] FOREIGN KEY ([ParentId]) REFERENCES level ([LevelId]),
  CONSTRAINT [FK_level_QuestionaireTemplate_QuestionaireTemplateId] FOREIGN KEY ([QuestionaireTemplateId]) REFERENCES QuestionnaireTemplate ([Id])
);

END;





IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES  WHERE TABLE_NAME = 'StakeholderLevel')) 
 BEGIN

 CREATE TABLE StakeholderLevel (
  [StakeholderLevelId] int check ([StakeholderLevelId] > 0) IDENTITY(1,1) NOT NULL,
  [UserId] int check ([UserId] > 0)  NOT NULL,
  [LevelId] int check ([LevelId] > 0)  NOT NULL,
  [CreatedById] int check ([CreatedById] > 0) DEFAULT NULL,
  [CreatedDate] datetime2(0) DEFAULT NULL,
  [ModifiedById] int check ([ModifiedById] > 0) DEFAULT NULL,
  [ModifiedDate] datetime2(0) DEFAULT NULL,
  [Active] bit NOT NULL DEFAULT 1,
  PRIMARY KEY ([StakeholderLevelId]),
  CONSTRAINT [FK_StakeholderLevel_ApplicationUser_UserId] FOREIGN KEY ([UserId]) REFERENCES ApplicationUser ([UserId]),
  CONSTRAINT [FK_StakeholderLevel_Level_LevelId] FOREIGN KEY ([LevelId]) REFERENCES [Level] ([LevelId])
);

END;



IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES  WHERE TABLE_NAME = 'ReviewerLevel')) 
 BEGIN

 CREATE TABLE ReviewerLevel (
  [ReviewerLevelId] int check ([ReviewerLevelId] > 0) IDENTITY(1,1) NOT NULL,
  [UserId] int check ([UserId] > 0)  NOT NULL,
  [LevelId] int check ([LevelId] > 0)  NOT NULL,
  [CreatedById] int check ([CreatedById] > 0) DEFAULT NULL,
  [CreatedDate] datetime2(0) DEFAULT NULL,
  [ModifiedById] int check ([ModifiedById] > 0) DEFAULT NULL,
  [ModifiedDate] datetime2(0) DEFAULT NULL,
  [Active] bit NOT NULL DEFAULT 1,
  PRIMARY KEY ([ReviewerLevelId]),
  CONSTRAINT [FK_ReviewerLevel_ApplicationUser_UserId] FOREIGN KEY ([UserId]) REFERENCES ApplicationUser ([UserId]),
  CONSTRAINT [FK_ReviewerLevel_Level_LevelId] FOREIGN KEY ([LevelId]) REFERENCES [Level] ([LevelId])
);

END;









IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES  WHERE TABLE_NAME = 'StakeholderQuestionnaireStatus')) 
 BEGIN

 CREATE TABLE StakeholderQuestionnaireStatus (
  [Id] int check ([Id] > 0) IDENTITY(1,1) NOT NULL,
  [QuestionaireTemplateId] int check ([QuestionaireTemplateId] > 0) NOT NULL,
  [IsSubmit] bit NOT NULL DEFAULT 1,
  [StakeholderId] int check ([StakeholderId] > 0) NOT NULL,
  [LevelId] int check ([LevelId] > 0) NOT NULL,
  [CreatedById] int check ([CreatedById] > 0) DEFAULT NULL,
  [CreatedDate] datetime2(0) DEFAULT NULL,
  [ModifiedById] int check ([ModifiedById] > 0) DEFAULT NULL,
  [ModifiedDate] datetime2(0) DEFAULT NULL,
  [Active] bit NOT NULL DEFAULT 1,
  PRIMARY KEY ([Id]),
  CONSTRAINT [FK_StakeholderQuestionnaireStatus_QuestionaireTemplate_QuestionaireTemplateId] FOREIGN KEY ([QuestionaireTemplateId]) REFERENCES QuestionnaireTemplate ([Id]),
  CONSTRAINT [FK_StakeholderQuestionnaireStatus_ApplicationUser_UserId] FOREIGN KEY ([StakeholderId]) REFERENCES ApplicationUser ([UserId]),
  CONSTRAINT [FK_StakeholderQuestionnaireStatus_Level_LevelId] FOREIGN KEY ([LevelId]) REFERENCES [Level] ([LevelId])
 );

END;




IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES  WHERE TABLE_NAME = 'StakeholderAnswer')) 
 BEGIN

 CREATE TABLE StakeholderAnswer (
  [Id] int check ([Id] > 0) IDENTITY(1,1) NOT NULL,
  [QuestionId] int check ([QuestionId] > 0) NOT NULL,
  [AnswerValue] nvarchar(max) NOT NULL,
  [LevelType] int check ([LevelType] > 0) NOT NULL,
  [StakeholderId] int check ([StakeholderId] > 0) NOT NULL,
  [LevelId] int check ([LevelId] > 0) NOT NULL,
  [QuestionaireTemplateId] int check ([QuestionaireTemplateId] > 0) NOT NULL,
  [CreatedById] int check ([CreatedById] > 0) DEFAULT NULL,
  [CreatedDate] datetime2(0) DEFAULT NULL,
  [ModifiedById] int check ([ModifiedById] > 0) DEFAULT NULL,
  [ModifiedDate] datetime2(0) DEFAULT NULL,
  [Active] bit NOT NULL DEFAULT 1,
  PRIMARY KEY ([Id]),
  CONSTRAINT [FK_StakeholderAnswer_Question_QuestionId] FOREIGN KEY ([QuestionId]) REFERENCES Question ([Id]),
  CONSTRAINT [FK_StakeholderAnswer_LevelTypeLookUp_LevelType] FOREIGN KEY ([LevelType]) REFERENCES LevelTypeLookUp ([Id]),
   CONSTRAINT [FK_StakeholderAnswer_QuestionaireTemplate_QuestionaireTemplateId] FOREIGN KEY ([QuestionaireTemplateId]) REFERENCES QuestionnaireTemplate ([Id]),
  CONSTRAINT [FK_StakeholderAnswer_ApplicationUser_UserId] FOREIGN KEY ([StakeholderId]) REFERENCES ApplicationUser ([UserId]),
  CONSTRAINT [FK_StakeholderAnswer_Level_LevelId] FOREIGN KEY ([LevelId]) REFERENCES [Level] ([LevelId])

 );

END;



  
  IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES  WHERE TABLE_NAME = 'PlanReportComment')) 
 BEGIN

 CREATE TABLE PlanReportComment (
  [Id] int check ([Id] > 0) IDENTITY(1,1) NOT NULL,
  [LevelId] int check ([LevelId] > 0) NOT NULL,
  [Strengths] nvarchar(max) NULL,
  [OFI] nvarchar(max) NULL,
  [CreatedById] int check ([CreatedById] > 0) DEFAULT NULL,
  [CreatedDate] datetime2(0) DEFAULT NULL,
  [ModifiedById] int check ([ModifiedById] > 0) DEFAULT NULL,
  [ModifiedDate] datetime2(0) DEFAULT NULL,
  [Active] bit NOT NULL DEFAULT 1,
  PRIMARY KEY ([Id]),
  CONSTRAINT [FK_PlanReportComment_Level_LevelId] FOREIGN KEY ([LevelId]) REFERENCES [Level] ([LevelId])
);

END;
